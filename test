#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
#include<stdlib.h>
#include<assert.h>
//int main(){
//	int a[5] = { 1, 2, 3, 4, 5 };
//	int *ptr = (int*)(&a + 1);
//	printf("%d %d \n", *(a + 1), *(ptr - 1));//2   5
//	system("pause");
//	return 0;
//}

//int main()
//{
//	int a[4] = { 1, 2, 3, 4 };
//	int *ptr1 = (int *)(&a + 1);
//	int *ptr2 = (int *)((int)a + 1);
//	printf("%x,%x", ptr1[-1], *ptr2);
//	system("pause");
//	return 0;
//}

//int main(int argc, char * argv[])
//{
//	int a[3][2] = { (0, 1), (2, 3), (4, 5) };
//	int *p;
//	p = a[0];
//	printf("%d", p[0]);  // 1
//	system("pause");
//}

//int main()
//{
//	char *a[] = { "work", "at", "alibaba" };
//	char**pa = a;
//	pa++;
//	printf("%s\n", *pa);   //at
//	system("pause");
//	return 0;
//}

//int main(){
//	int aa[2][5] = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 };
//	int *ptr1 = (int *)(&aa + 1);
//	int *ptr2 = (int *)(*(aa + 1));
//	printf("%d,%d", *(ptr1 - 1), *(ptr2 - 1));   // 9   4
//	system("pause");
//	return 0;
// }


////使用计数器
//int my_strlen(const char *str){
//	int count = 0;
//	while (*str){
//		count++;
//		*str++;
//	}
//	return count;
//}
//int main(){
//	char *p = "hello";
//	printf("%d \n",my_strlen(p));
//	system("pause");
//	return 0;
//}

////不使用计数器
//int my_strlen(const char *str){
//	if (*str == '\0'){
//		return 0;
//	}
//	return 1 + my_strlen(str+1);
//}
//int main(){
//	char *p = "hello";
//	printf("%d \n",my_strlen(p));
//	system("pause");
//	return 0;
//}

//int my_strlen(char * str){
//	char* s = str;
//	while (*str != '\0'){
//		str++;
//	}
//	return str - s;
//}
//int main(){
//	char *p = "hello";
//	printf("%d \n",my_strlen(p));
//	system("pause");
//	return 0;
//}

//char * my_strcpy(char *dest, const char *src){
//	char *ptr = dest;
//	assert(dest != NULL);
//	assert(src != NULL);
//	while (*dest++ = *src++){
//		;
//	}
//	return ptr;
//}
//int main(){
//	char arr1[] = "hello";
//	char arr2[] = "world";
//	my_strcpy(arr1, arr2);
//	printf("%s\n", arr1);
//	system("pause");
//	return 0;
//}

//char * my_strcat(char *dest, const char *src){
//	char *ptr = dest;
//	assert(dest != NULL);
//	assert(src != NULL);
//	while (*dest){
//		dest++;
//	}
//	while (*dest++ = *src++){
//		;
//	}
//	return ptr;
//}
//int main(){
//	char arr1[] = "hello";
//	char arr2[] = "world";
//	my_strcat(arr1, arr2);
//	printf("%s\n", arr1);
//	system("pause");
//	return 0;
//}

//int my_strcmp(const char * src, const char * dest) {
//	int ret = 0;
//	assert(src != NULL);
//	assert(dest != NULL);
//	while (!(ret = *(unsigned char *)src - *(unsigned char *)dest) && *dest)
//		++src, ++dest;
//	if (ret < 0)
//		ret = -1;
//	else if (ret > 0)
//		ret = 1;
//	return(ret);
//}
//int main(){
//	char arr1[] = "hello";
//	char arr2[] = "worl";
//	printf("%d\n",my_strcmp(arr1, arr2));
//	system("pause");
//	return 0;
//}

//char * my_memcpy(char *dest, const char *src,int num){
//	char *ptr = dest;
//	assert(dest != NULL);
//	assert(src != NULL);
//	while (num--){
//		*dest++ = *src++;
//	}
//	return ptr;
//}
//int main(){
//	char arr1[] = "hello";
//	char arr2[] = "world";
//	my_memcpy(arr1, arr2,3);
//	printf("%s\n", arr1);
//	system("pause");
//	return 0;
//}

//int main(){
//	struct S1
//	{
//		char c1;
//		double i;
//		char c2;
//	};
//	printf("%d\n", sizeof(struct S1));  //24
//	system("pause");
//	return 0;
//}
//
//int main(){
//	struct S2
//	{
//		char c1;
//		char c2;
//		int i;
//	};
//	printf("%d\n", sizeof(S2));
//	system("pause");
//	return 0;
//}


//int main(){
	//struct S3
	//{
	//	double c1;
	//	char c2;
	//	int i;
	//};
//	printf("%d\n", sizeof(S3));   //16
//	system("pause");
//	return 0;
//}


//int main(){
	//struct S4
	//{
	//	char c1;
	//	double  c2;
	//	int i;
	//};
//	printf("%d\n", sizeof(S4)); //24
//	system("pause");
//	return 0;
//}

//int main(){
//	struct S5{
//		char a;   //1
//		struct S3   //16
//		{
//			double c1;
//			char c2;
//			int i;
//		};
//		struct S4   //24
//		{
//			char c1;
//			double  c2;
//			int i;
//		};
//		double d;  //8
//	};
//	printf("%d\n", sizeof(S5));   //16
//	system("pause");
//	return 0;
//}
